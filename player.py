import pygame
from circleshape import CircleShape
from constants import PLAYER_RADIUS, PLAYER_TURN_SPEED

class Player(CircleShape):
    def __init__(self, x, y):
        # Call the parent class constructor, passing the position and the player's radius.
        super().__init__(x, y, PLAYER_RADIUS)
        
        # Initialize the player's rotation, in degrees.
        self.rotation = 0

    def triangle(self):
        # This method calculates the three points of the player's triangle based on its position and rotation.
        forward = pygame.Vector2(0, 1).rotate(self.rotation)
        right = pygame.Vector2(0, 1).rotate(self.rotation + 90) * self.radius / 1.5
        a = self.position + forward * self.radius
        b = self.position - forward * self.radius - right
        c = self.position - forward * self.radius + right
        return [a, b, c]

    def rotate(self, dt):
        # Adds to the player's current rotation based on the turn speed and delta time.
        self.rotation += PLAYER_TURN_SPEED * dt

    def update(self, dt):
        # This method handles player input and updates the player's state.
        keys = pygame.key.get_pressed()

        if keys[pygame.K_a]:
            # Rotate left by inverting the dt value
            self.rotate(-dt)
        if keys[pygame.K_d]:
            # Rotate right
            self.rotate(dt)

    def draw(self, screen):
        # This method overrides the parent's draw method to draw a white triangle.
        # The points for the triangle are generated by the self.triangle() method.
        pygame.draw.polygon(screen, "white", self.triangle(), 2)

